{"version":3,"sources":["components/BuilderElementsMenuItem.js","components/UndefinedElement.js","components/ComponentFactory.js","components/Header.js","components/Paragraph.js","components/Image.js","components/FlipCard.js","components/BuilderElementsMenu.js","components/BuilderNavbar.js","data.js","modifiers/snapDragHandleToCursor.js","components/DebugValues.js","components/Droppable.js","components/GridColumn.js","components/SortableGridColumn.js","components/Builder.js","App.js","reportWebVitals.js","index.js"],"names":["BuilderElementsMenuItem","props","_useDraggable","useDraggable","id","data","attributes","listeners","setNodeRef","react_default","a","createElement","Object","assign","ref","style","touchAction","children","UndefinedElement","className","index_es","icon","element","Components","header","type","text","component","defaultHeight","paragraph","image","justifyContent","horizontalAlignment","alignItems","verticalAlignment","src","alt","flipcard","front","back","constructComponent","item","React","getProps","key","_i","_Object$entries","entries","length","_ref3","_ref2","slicedToArray","value","isChildComponent","hasOwnProperty","components_UndefinedElement","BuilderElementsMenu","components_BuilderElementsMenuItem","height","isNewElement","BuilderNavbar","body","columns","snapDragHandleToCursor","_ref","activatorEvent","draggingNodeRect","transform","activatorCoordinates","getEventCoordinates","offsetX","x","left","offsetY","y","top","objectSpread","width","DebugValues","translateTiming","columnDelayTiming","setTranslateTiming","setColumnDelayTiming","slopTiming","gridGap","setSlopTiming","setGridGap","useEffect","localStorage","setItem","display","flexWrap","gap","marginBottom","onChange","event","parseInt","target","defaultStyle","transition","concat","opacity","transitionStyles","entering","entered","exiting","exited","Droppable","_useDroppable","useDroppable","rowIndex","relativePosition","isParentContainer","isPlaceholder","node","active","isOver","current","clientHeight","rect","initial","Math","max","_useState","useState","_useState2","inProp","setInProp","Transition","nodeRef","timeout","in","state","GridColumn","forwardRef","onMouseOver","setShowDragHandle","onMouseOut","positionStyle","data-translate-y","translateY","SortableGridColumn","_useSortable","useSortable","index","setActivatorNodeRef","isDragging","showDragHandle","scaleX","scaleY","CSS","Translate","toString","classes","push","components_GridColumn","join","column","PageBuilder","items","setItems","_useState3","_useState4","activeId","setActiveId","lastOverId","useRef","recentlyMovedToNewContainer","columnTimerId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","_useState5","_useState6","draggingElement","_useState7","_useState8","_useState9","getItem","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","collisionDetectionStrategy","useCallback","args","pointerIntersections","pointerWithin","filteredIntersections","rectIntersection","filter","i","droppableContainer","overId","getFirstCollision","containerItems","closestDroppables","closestCenter","droppableContainers","container","includes","cursor","components_BuilderNavbar","core_esm","modifiers","collisionDetection","onDragStart","e","onDragOver","over","collisions","clearTimeout","overRowIndex","modifier","updateItems","toConsumableArray","map","row","col","newOb","splice","setTimeout","addNewElement","fromCol","flatMap","find","fromRowIndex","findIndex","destinationCol","undefined","destinationRow","destinationRowIndex","destinationColIndex","translated","right","isAddingNewColumn","uuid","moveElement","onDragEnd","components_DebugValues","components_Droppable","sortable_esm","strategy","horizontalListSortingStrategy","colIndex","components_SortableGridColumn","overflow","components_BuilderElementsMenu","dropAnimation","componentType","replace","getComponentForPreview","library","add","faImage","faHeading","faParagraph","faTriangleExclamation","faUpDownLeftRight","App","Builder","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d341515e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDraggable } from \"@dnd-kit/core\";\r\n\r\nconst BuilderElementsMenuItem = (props) => {\r\n    const { attributes, listeners, setNodeRef } = useDraggable({\r\n        id: props.id,\r\n        data: props.data,\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={setNodeRef}\r\n            {...listeners}\r\n            {...attributes}\r\n            style={{ touchAction: \"manipulation\" }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuilderElementsMenuItem;\r\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst UndefinedElement = (props) => {\n  return (\n    <div className=\"undefined-element\">\n      <FontAwesomeIcon icon=\"fa-solid fa-triangle-exclamation\" />\n      <span className=\"message\">\n        The element '{props.element}' could not be found\n      </span>\n      <FontAwesomeIcon icon=\"fa-solid fa-triangle-exclamation\" />\n    </div>\n  );\n};\n\nexport default UndefinedElement;\n","import React from \"react\";\nimport FlipCard from \"./FlipCard\";\nimport Image from \"./Image\";\nimport Header from \"./Header\";\nimport Paragraph from \"./Paragraph\";\nimport Spacer from \"./Spacer\";\nimport UndefinedElement from \"./UndefinedElement\";\n\nexport const Components = {\n    header: {\n        type: Header,\n        component: \"header\",\n        props: {\n            text: \"My Header\",\n        },\n        defaultHeight: 48,\n    },\n    paragraph: {\n        type: Paragraph,\n        component: \"paragraph\",\n        props: {\n            text:\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris mattis felis sed suscipit consequat. Nullam feugiat quam sit amet est tincidunt, nec malesuada augue posuere. Curabitur posuere libero eu nunc rhoncus, sit amet ullamcorper magna mattis. Nullam et mauris in risus malesuada fringilla ut et lacus. Phasellus congue at velit ac cursus. Integer pretium magna vitae ex vehicula lobortis. Morbi tincidunt purus a lorem pharetra molestie. Morbi ac volutpat diam. In sollicitudin luctus dictum. In sollicitudin nisl sapien, ut dignissim nibh consectetur vitae.\",\n        },\n        defaultHeight: 96,\n    },\n    image: {\n        type: Image,\n        component: \"image\",\n        props: {\n            src: `img/image-2.jpg`,\n            alt: \"Alt Text\",\n        },\n        defaultHeight: 826,\n    },\n    flipcard: {\n        type: FlipCard,\n        component: \"flipcard\",\n        defaultHeight: 300,\n    },\n    // columnlayout: {\n    //     type: ColumnLayout,\n    // },\n};\n\n// TODO: need a map of what components can be children of what other components,\n// and throw an error or ignore if invalid, ie: flipcard's child can't be another flipcard.\n\n// Get the props for a component. Recursively handle nested sub-components\nconst getProps = (item) => {\n    const props = {\n        key: item.id,\n    };\n\n    if (!item.props) {\n        return props;\n    }\n    for (const [key, value] of Object.entries(item.props)) {\n        const isChildComponent =\n            value !== null &&\n            typeof value === \"object\" &&\n            value.hasOwnProperty(\"component\");\n\n        if (isChildComponent) {\n            props[key] = React.createElement(\n                Components[value.component].type,\n                getProps(value)\n            );\n        } else {\n            props[key] = value;\n        }\n    }\n\n    return props;\n};\n\nexport const constructComponent = (item) => {\n    if (\n        Components[item.component] &&\n        typeof Components[item.component].type !== \"undefined\"\n    ) {\n        return React.createElement(\n            Components[item.component].type,\n            getProps(item)\n        );\n    }\n\n    return React.createElement(\n        () => <UndefinedElement element={item.component} />,\n        { key: item.id }\n    );\n};\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n}\n","import React from \"react\";\n\nconst Header = (props) => {\n  return <h1>{props.text}</h1>;\n};\n\nexport default Header;\n","import React from \"react\";\r\n\r\nconst Paragraph = (props) => {\r\n    return <p>{props.text}</p>;\r\n};\r\n\r\nexport default Paragraph;\r\n","import React from \"react\";\n\nconst Image = (props) => {\n  return (\n    <div\n      className=\"image-component\"\n      style={{\n        justifyContent: props.horizontalAlignment,\n        alignItems: props.verticalAlignment,\n      }}\n    >\n      <img src={props.src} alt={props.alt} />\n    </div>\n  );\n};\n\nexport default Image;\n","import React, { useEffect, useState } from \"react\";\n\nconst FlipCard = (props) => {\n  // const items = props.items.map(item => {\n  //   return React.createElement(item.)\n  // })\n\n  return (\n    <div className=\"flip-card-container\">\n      <div className=\"flip-card\">\n        <div className=\"flip-card-inner\">\n          <div className=\"flip-card-front\">{props.front}</div>\n          <div className=\"flip-card-back\">{props.back}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FlipCard;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"../css/App.css\";\nimport BuilderElementsMenuItem from \"./BuilderElementsMenuItem\";\nimport { Components } from \"./ComponentFactory\";\n\nconst BuilderElementsMenu = (props) => {\n    return (\n        <div className=\"builder-elements-menu\">\n            <div className=\"element-wrapper\">\n                <BuilderElementsMenuItem\n                    id=\"header-menu-item\"\n                    data={{\n                        component: \"header\",\n                        height: Components.header.defaultHeight,\n                        isNewElement: true,\n                    }}\n                >\n                    <button className=\"element\">\n                        <FontAwesomeIcon icon=\"fa-solid fa-heading\" /> HEADER\n                    </button>\n                </BuilderElementsMenuItem>\n            </div>\n            <div className=\"element-wrapper\">\n                <BuilderElementsMenuItem\n                    id=\"paragraph-menu-item\"\n                    data={{\n                        component: \"paragraph\",\n                        height: Components.paragraph.defaultHeight,\n                        isNewElement: true,\n                    }}\n                >\n                    <button className=\"element\">\n                        <FontAwesomeIcon icon=\"fa-solid fa-paragraph\" />\n                        PARAGRAPH\n                    </button>\n                </BuilderElementsMenuItem>\n            </div>\n            <div className=\"element-wrapper\">\n                <BuilderElementsMenuItem\n                    id=\"image-menu-item\"\n                    data={{\n                        component: \"image\",\n                        height: Components.image.defaultHeight,\n                        isNewElement: true,\n                    }}\n                >\n                    <button className=\"element\">\n                        <FontAwesomeIcon icon=\"fa-solid fa-image\" />\n                        IMAGE\n                    </button>\n                </BuilderElementsMenuItem>\n            </div>\n            <div className=\"element-wrapper\">\n                <BuilderElementsMenuItem\n                    id=\"flipcard-menu-item\"\n                    data={{\n                        component: \"flipcard\",\n                        height: Components.flipcard.defaultHeight,\n                        isNewElement: true,\n                    }}\n                >\n                    <button className=\"element\">\n                        <FontAwesomeIcon icon=\"fa-solid fa-image\" />\n                        FLIP CARD\n                    </button>\n                </BuilderElementsMenuItem>\n            </div>\n        </div>\n    );\n};\n\nexport default BuilderElementsMenu;\n","import \"../css/App.css\";\r\nimport React from \"react\";\r\n\r\nconst BuilderNavbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"course\">\r\n                <span className=\"course-image\"></span>\r\n                <span className=\"course-title\">Course Title (edit)</span>\r\n            </div>\r\n            <div className=\"options\">\r\n                {/* <span className=\"option\">Cancel</span>\r\n            <span className=\"option\">Save</span>\r\n            <span className=\"option\">Publish</span> */}\r\n                <span className=\"option preview\">Preview</span>\r\n                {/* <span className=\"option\">Gear icon</span>\r\n            <span className=\"option\">Chart icon</span> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuilderNavbar;\r\n","import uuid from \"react-uuid\";\n\nexport const data = {\n    content: {\n        body: [\n            // {\n            //     id: \"row2\",\n            //     columns: [\n            //         {\n            //             id: \"row2col1\",\n            //             component: \"paragraph\",\n            //             props: {\n            //                 text:\n            //                     \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris mattis felis sed suscipit consequat. Nullam feugiat quam sit amet est tincidunt, nec malesuada augue posuere. Curabitur posuere libero eu nunc rhoncus, sit amet ullamcorper magna mattis. Nullam et mauris in risus malesuada fringilla ut et lacus. Phasellus congue at velit ac cursus. Integer pretium magna vitae ex vehicula lobortis. Morbi tincidunt purus a lorem pharetra molestie. Morbi ac volutpat diam. In sollicitudin luctus dictum. In sollicitudin nisl sapien, ut dignissim nibh consectetur vitae.\",\n            //             },\n            //         },\n            //         {\n            //             id: \"row2col2\",\n            //             component: \"header\",\n            //             props: {\n            //                 text: \"Lorem ipsum.\",\n            //             },\n            //         },\n            //     ],\n            // },\n            // {\n            //     id: uuid(),\n            //     columns: [\n            //         {\n            //             id: uuid(),\n            //             component: \"paragraph\",\n            //             props: {\n            //                 text:\n            //                     \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris mattis felis sed suscipit consequat. Nullam feugiat quam sit amet est tincidunt, nec malesuada augue posuere. Curabitur posuere libero eu nunc rhoncus, sit amet ullamcorper magna mattis. Nullam et mauris in risus malesuada fringilla ut et lacus. Phasellus congue at velit ac cursus. Integer pretium magna vitae ex vehicula lobortis. Morbi tincidunt purus a lorem pharetra molestie. Morbi ac volutpat diam. In sollicitudin luctus dictum. In sollicitudin nisl sapien, ut dignissim nibh consectetur vitae.\",\n            //             },\n            //         },\n            //     ],\n            // },\n            {\n                id: \"row 1\",\n                columns: [\n                    {\n                        id: \"row 1 col 1\",\n                        component: \"header\",\n                        props: {\n                            text: \"row 1 col 1\",\n                        },\n                    },\n                ],\n            },\n            {\n                id: \"row 2\",\n                columns: [\n                    {\n                        id: \"row 2 col 1\",\n                        component: \"header\",\n                        props: {\n                            text: \"row 2 col 1\",\n                        },\n                    },\n                    {\n                        id: \"row 2 col 2\",\n                        component: \"header\",\n                        props: {\n                            text: \"row 2 col 2\",\n                        },\n                    },\n                    {\n                        id: \"row 2 col 3\",\n                        component: \"header\",\n                        props: {\n                            text: \"row 2 col 3\",\n                        },\n                    },\n                ],\n            },\n            {\n                id: \"row 3\",\n                columns: [\n                    {\n                        id: \"row 3 col 1\",\n                        component: \"header\",\n                        props: {\n                            text: \"row 3 col 1\",\n                        },\n                    },\n                ],\n            },\n            {\n                id: \"row 4\",\n                columns: [\n                    {\n                        id: \"row 4 col 1\",\n                        component: \"header\",\n                        props: {\n                            text: \"row 4 col 1\",\n                        },\n                    },\n                ],\n            },\n            {\n                id: \"row 5\",\n                columns: [\n                    {\n                        id: \"row 5 col 1\",\n                        component: \"header\",\n                        props: {\n                            text: \"row 5 col 1\",\n                        },\n                    },\n                ],\n            },\n            // {\n            //     id: uuid(),\n            //     columns: [\n            //         {\n            //             id: uuid(),\n            //             component: \"paragraph\",\n            //             props: {\n            //                 text:\n            //                     \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris mattis felis sed suscipit consequat. Nullam feugiat quam sit amet est tincidunt, nec malesuada augue posuere. Curabitur posuere libero eu nunc rhoncus, sit amet ullamcorper magna mattis. Nullam et mauris in risus malesuada fringilla ut et lacus. Phasellus congue at velit ac cursus. Integer pretium magna vitae ex vehicula lobortis. Morbi tincidunt purus a lorem pharetra molestie. Morbi ac volutpat diam. In sollicitudin luctus dictum. In sollicitudin nisl sapien, ut dignissim nibh consectetur vitae.\",\n            //             },\n            //         },\n            //     ],\n            // },\n        ],\n    },\n};\n","import { Modifier } from \"@dnd-kit/core\";\r\nimport { getEventCoordinates } from \"@dnd-kit/utilities\";\r\n\r\n// Custom drag handle modifier that \"snaps\" the drag handle to your cursor.\r\n// Based on the \"snapCenterToCursor\" modifier from dnd-kit.\r\nexport const snapDragHandleToCursor = ({\r\n    activatorEvent,\r\n    draggingNodeRect,\r\n    transform,\r\n}) => {\r\n    if (draggingNodeRect && activatorEvent) {\r\n        const activatorCoordinates = getEventCoordinates(activatorEvent);\r\n\r\n        if (!activatorCoordinates) {\r\n            return transform;\r\n        }\r\n\r\n        const offsetX = activatorCoordinates.x - draggingNodeRect.left;\r\n        const offsetY = activatorCoordinates.y - draggingNodeRect.top;\r\n\r\n        return {\r\n            ...transform,\r\n            x: transform.x + offsetX - draggingNodeRect.width,\r\n            y: transform.y + offsetY - draggingNodeRect.height / 2,\r\n        };\r\n    }\r\n\r\n    return transform;\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst DebugValues = ({\r\n    translateTiming,\r\n    setTranslateTiming,\r\n    columnDelayTiming,\r\n    setColumnDelayTiming,\r\n    slopTiming,\r\n    setSlopTiming,\r\n    gridGap,\r\n    setGridGap,\r\n}) => {\r\n    // Persists debug settings across sessions\r\n    useEffect(() => {\r\n        localStorage.setItem(\"translateTiming\", translateTiming);\r\n        localStorage.setItem(\"columnDelayTiming\", columnDelayTiming);\r\n        localStorage.setItem(\"gridGap\", gridGap);\r\n        localStorage.setItem(\"slopTiming\", slopTiming);\r\n    }, [translateTiming, columnDelayTiming, gridGap, slopTiming]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                gap: \"20px\",\r\n                marginBottom: \"40px\",\r\n            }}\r\n        >\r\n            {/* <label>\r\n                <div>Translate speed (ms)</div>\r\n                <input\r\n                    type=\"number\"\r\n                    value={translateTiming}\r\n                    onChange={(event) =>\r\n                        setTranslateTiming(parseInt(event.target.value))\r\n                    }\r\n                />\r\n            </label> */}\r\n            <label>\r\n                <div>Column hover time (ms)</div>\r\n                <input\r\n                    type=\"number\"\r\n                    value={columnDelayTiming}\r\n                    onChange={(event) =>\r\n                        setColumnDelayTiming(parseInt(event.target.value))\r\n                    }\r\n                />\r\n            </label>\r\n            {/* <label>\r\n                <div>Slop time (ms)</div>\r\n                <input\r\n                    type=\"number\"\r\n                    value={slopTiming}\r\n                    onChange={(event) =>\r\n                        setSlopTiming(parseInt(event.target.value))\r\n                    }\r\n                />\r\n            </label>\r\n            <label>\r\n                <div>Space between rows/cols</div>\r\n                <input\r\n                    type=\"number\"\r\n                    value={gridGap}\r\n                    onChange={(event) =>\r\n                        setGridGap(parseInt(event.target.value))\r\n                    }\r\n                />\r\n            </label> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DebugValues;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { useDndContext, useDroppable } from \"@dnd-kit/core\";\r\nimport { Transition } from \"react-transition-group\";\r\n\r\nconst duration = 300;\r\n\r\nconst defaultStyle = {\r\n    transition: `opacity ${duration}ms`,\r\n    opacity: 0,\r\n};\r\n\r\nconst transitionStyles = {\r\n    entering: { opacity: 0 },\r\n    entered: { opacity: 1 },\r\n    exiting: { opacity: 1 },\r\n    exited: { opacity: 0 },\r\n};\r\n\r\nconst Droppable = (props) => {\r\n    const { setNodeRef, node, active, isOver } = useDroppable({\r\n        id: props.id,\r\n        data: {\r\n            id: props.id,\r\n            rowIndex: props.rowIndex,\r\n            relativePosition: props.relativePosition,\r\n            isParentContainer: props.isParentContainer,\r\n            isPlaceholder: props.isPlaceholder,\r\n        },\r\n    });\r\n\r\n    // Manually set the height of the grid row while we're dragging stuff over it, so that if we remove all columns the layout won't shift until we're done dragging\r\n    let height = null;\r\n    if (isOver && node.current && !props.isPlaceholder) {\r\n        height = node.current.clientHeight;\r\n\r\n        if (active && active.rect.current.initial) {\r\n            height = Math.max(height, active.rect.current.initial.height);\r\n        }\r\n    }\r\n\r\n    const [inProp, setInProp] = useState(false);\r\n    useEffect(() => {\r\n        setInProp(true);\r\n    }, []);\r\n\r\n    return (\r\n        <Transition nodeRef={node} timeout={1} in={inProp}>\r\n            {(state) => (\r\n                <div\r\n                    className=\"grid-row\"\r\n                    ref={setNodeRef}\r\n                    style={{\r\n                        height: height !== null ? `${height}px` : \"\",\r\n                        ...defaultStyle,\r\n                        ...transitionStyles[state],\r\n                    }}\r\n                >\r\n                    {props.children}\r\n                </div>\r\n            )}\r\n        </Transition>\r\n    );\r\n};\r\n\r\nexport default Droppable;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nconst GridColumn = forwardRef((props, ref) => {\r\n  return (\r\n    <div\r\n      id={props.id}\r\n      key={props.id}\r\n      ref={ref}\r\n      className={`grid-column ${props.className}`}\r\n      onMouseOver={() => props.setShowDragHandle(true)}\r\n      onMouseOut={() => props.setShowDragHandle(false)}\r\n      style={{\r\n        ...props.positionStyle,\r\n        ...props.style,\r\n      }}\r\n      data-translate-y={props.translateY}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default GridColumn;\r\n","import React, { useState } from \"react\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport GridColumn from \"./GridColumn\";\nimport { constructComponent } from \"./ComponentFactory\";\n\nconst SortableGridColumn = (props) => {\n    const {\n        attributes,\n        listeners,\n        node,\n        setNodeRef,\n        setActivatorNodeRef,\n        transform,\n        transition,\n        isDragging,\n        active,\n    } = useSortable({\n        id: props.id,\n        data: {\n            id: props.id,\n            index: props.index,\n            rowIndex: props.rowIndex,\n            relativePosition: props.relativePosition,\n        },\n    });\n\n    const [showDragHandle, setShowDragHandle] = useState(false);\n\n    // We don't want anything to scale\n    if (transform) {\n        transform.scaleX = 1;\n        transform.scaleY = 1;\n    }\n    const style = {\n        transform: CSS.Translate.toString(transform),\n        transition,\n        opacity: isDragging ? \".5\" : 1,\n    };\n\n    const classes = [];\n    if (showDragHandle) {\n        classes.push(\"drag-handle-visible\");\n    }\n\n    return (\n        <GridColumn\n            ref={setNodeRef}\n            showDragHandle={showDragHandle}\n            setShowDragHandle={setShowDragHandle}\n            className={classes.join(\" \")}\n            style={style}\n            {...props}\n        >\n            {constructComponent(props.column)}\n            <div\n                ref={setActivatorNodeRef}\n                {...listeners}\n                {...attributes}\n                className=\"drag-handle\"\n                style={{\n                    display: showDragHandle ? \"\" : \"none\",\n                }}\n            >\n                <FontAwesomeIcon icon=\"fa-solid fa-up-down-left-right\" />\n            </div>\n        </GridColumn>\n    );\n};\n\nexport default SortableGridColumn;\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n    DndContext,\n    DragOverlay,\n    closestCenter,\n    KeyboardSensor,\n    PointerSensor,\n    useSensor,\n    useSensors,\n    pointerWithin,\n    rectIntersection,\n    getFirstCollision,\n} from \"@dnd-kit/core\";\nimport {\n    SortableContext,\n    sortableKeyboardCoordinates,\n    horizontalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport uuid from \"react-uuid\";\nimport BuilderElementsMenu from \"./BuilderElementsMenu\";\nimport BuilderNavbar from \"./BuilderNavbar\";\nimport { Components, constructComponent } from \"./ComponentFactory\";\nimport { data } from \"../data\";\nimport \"../css/App.css\";\nimport { snapDragHandleToCursor } from \"../modifiers/snapDragHandleToCursor\";\nimport DebugValues from \"./DebugValues\";\nimport Droppable from \"./Droppable\";\nimport SortableGridColumn from \"./SortableGridColumn\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst PageBuilder = () => {\n    // The lesson elements\n    const [items, setItems] = useState(data.content.body);\n    const [activeId, setActiveId] = useState(null);\n    const lastOverId = useRef(null);\n    const recentlyMovedToNewContainer = useRef(false);\n    const columnTimerId = useRef(null);\n\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n\n    // What element we're currently dragging, needed so we can measure it and show a placeholder in the dom\n    const [draggingElement, setDraggingElement] = useState(null);\n\n    const [itemToEdit, setItemToEdit] = useState(null);\n\n    // Configurable debug settings\n    const [slopTiming, setSlopTiming] = useState(\n        +localStorage.getItem(\"slopTiming\") || 150\n    );\n\n    const [translateTiming, setTranslateTiming] = useState(\n        +localStorage.getItem(\"translateTiming\") || 300\n    );\n\n    const [columnDelayTiming, setColumnDelayTiming] = useState(\n        +localStorage.getItem(\"columnDelayTiming\") || 1000\n    );\n\n    const [gridGap, setGridGap] = useState(\n        +localStorage.getItem(\"gridGap\") || 24\n    );\n\n    const handleDragStart = (e) => {\n        const { active } = e;\n        let activeData = {};\n        if (active.data.current) {\n            activeData = active.data.current;\n        }\n\n        setActiveId(active.id);\n    };\n\n    const handleDragOver = (e) => {\n        const { active, over, collisions } = e;\n\n        // Unset the column hover timer every time our over target changes\n        clearTimeout(columnTimerId.current);\n        columnTimerId.current = null;\n\n        if (!active || !over || !over.data.current.relativePosition) {\n            return;\n        }\n\n        // If an element is being hovered over itself, there's nothing to be done\n        const isHoveringOverSelf = active.id === over.id;\n        if (isHoveringOverSelf) {\n            return;\n        }\n\n        const overRowIndex = over.data.current.rowIndex;\n        let modifier = 0;\n        if (over.data.current.relativePosition === \"above\") {\n            modifier = -1;\n        } else if (over.data.current.relativePosition === \"below\") {\n            modifier = 1;\n        }\n\n        if (active.data.current.isNewElement) {\n            addNewElement(over, active, overRowIndex, modifier);\n        } else {\n            moveElement(over, active, modifier);\n        }\n    };\n\n    function moveElement(over, active, modifier) {\n        let updateItems = [...items];\n        const fromCol = updateItems\n            .flatMap((row) => row.columns)\n            .find((col) => col.id === active.id);\n\n        const fromRow = updateItems.find((row) =>\n            row.columns.find((col) => col.id === fromCol.id)\n        );\n\n        // No need to move column if it's being moved to a directly adjacent target\n        if (\n            fromRow.columns.length === 1 &&\n            over.data.current.isPlaceholder === true\n        ) {\n            return;\n        }\n\n        const fromRowIndex = updateItems.findIndex((row) =>\n            row.columns.find((col) => col.id === active.id)\n        );\n\n        const fromColIndex = updateItems[fromRowIndex].columns.findIndex(\n            (col) => col.id === active.id\n        );\n\n        const destinationCol = updateItems\n            .flatMap((row) => row.columns)\n            .find((col) => col.id === over.id);\n\n        const destinationIsNewRow = destinationCol === undefined;\n\n        if (!destinationIsNewRow) {\n            // adding a column to existing row\n            const destinationRow = updateItems.find((row) =>\n                row.columns.find((col) => col.id === destinationCol.id)\n            );\n\n            const destinationRowIndex = updateItems.findIndex((row) =>\n                row.columns.find((col) => col.id === over.id)\n            );\n            const destinationColIndex = updateItems[\n                destinationRowIndex\n            ].columns.findIndex((col) => col.id === over.id);\n\n            // Remove original location\n            updateItems[fromRowIndex].columns = updateItems[\n                fromRowIndex\n            ].columns.filter((col) => col.id !== fromCol.id);\n\n            // Figure out which side of column we're hovering on...\n            const isRightOfOverItem =\n                over &&\n                active.rect.current.translated &&\n                active.rect.current.translated.right >\n                    over.rect.right - over.rect.width / 2;\n\n            destinationRow.columns.splice(destinationColIndex, 0, fromCol);\n\n            // We don't want the layout to jump while moving rows into columns, so don't remove empty rows yet...\n            const isAddingNewColumn = fromRowIndex !== destinationRowIndex;\n            if (isAddingNewColumn && columnTimerId.current === null) {\n                columnTimerId.current = setTimeout(() => {\n                    recentlyMovedToNewContainer.current = true;\n                    setItems(updateItems);\n                    columnTimerId.current = null;\n                }, columnDelayTiming);\n            }\n        } else {\n            const destinationRowIndex = over.data.current.rowIndex;\n\n            const destinationColIndex = updateItems[\n                destinationRowIndex\n            ].columns.findIndex((col) => col.id === over.id);\n\n            // console.log(\n            //     fromRowIndex,\n            //     fromColIndex,\n            //     destinationRowIndex,\n            //     destinationColIndex\n            // );\n            updateItems.map((row) => {\n                row.columns = row.columns.filter((col) => col.id !== active.id);\n            });\n\n            const index =\n                destinationRowIndex + modifier < 0\n                    ? 0\n                    : destinationRowIndex + modifier;\n\n            updateItems.splice(index, 0, {\n                id: uuid(),\n                columns: [fromCol],\n            });\n\n            updateItems = updateItems.filter((row) => row.columns.length > 0);\n            recentlyMovedToNewContainer.current = true;\n\n            setItems(updateItems);\n        }\n    }\n\n    function addNewElement(over, active, overRowIndex, modifier) {\n        let updateItems = [...items];\n\n        if (over.id === \"new-column-placeholder\") {\n            return;\n        }\n\n        // remove placeholders, and then \"commit\" in ondragend by searching and replacing the id\n        updateItems.map((row) => {\n            row.columns = row.columns.filter(\n                (col) => col.id !== \"new-column-placeholder\"\n            );\n        });\n        updateItems = updateItems.filter((row) => row.columns.length > 0);\n\n        if (over.data.current.relativePosition !== \"within\") {\n            // insert new row\n            const newOb = {\n                id: \"new-row-placeholder\",\n                columns: [\n                    {\n                        id: \"new-column-placeholder\",\n                        component: active.data.current.component,\n                        props: {\n                            ...Components[active.data.current.component].props,\n                        },\n                    },\n                ],\n            };\n\n            const index =\n                overRowIndex + modifier < 0 ? 0 : overRowIndex + modifier;\n            updateItems.splice(index, 0, newOb);\n            setItems(updateItems);\n        } else {\n            if (columnTimerId.current === null) {\n                columnTimerId.current = setTimeout(() => {\n                    // insert new column\n                    const index =\n                        overRowIndex + modifier > updateItems.length - 1\n                            ? updateItems.length - 1\n                            : overRowIndex + modifier;\n                    updateItems[index].columns.push({\n                        id: \"new-column-placeholder\",\n                        component: active.data.current.component,\n                        props: {\n                            ...Components[active.data.current.component].props,\n                        },\n                    });\n                    setItems(updateItems);\n                    columnTimerId.current = null;\n                }, columnDelayTiming);\n            }\n        }\n    }\n\n    const handleDragEnd = (e) => {\n        const { over, active, collisions } = e;\n\n        let updateItems = [...items];\n\n        // Replace any placeholder elements with real ids\n        updateItems.map((row) => {\n            if (row.id === \"new-row-placeholder\") {\n                row.id = uuid();\n            }\n\n            row.columns.map((col) => {\n                if (col.id === \"new-column-placeholder\") {\n                    col.id = uuid();\n                }\n            });\n        });\n\n        updateItems = updateItems.filter((row) => row.columns.length > 0);\n        setItems(updateItems);\n        setActiveId(null);\n    };\n\n    /**\n     * Custom collision detection strategy optimized for multiple containers\n     *\n     * - First, find any droppable containers intersecting with the pointer.\n     * - If there are none, find intersecting containers with the active draggable.\n     * - If there are no intersecting containers, return the last matched intersection\n     *\n     */\n\n    const [shouldCheckCollisions, setShouldCheckCollisions] = useState(true);\n\n    const collisionDetectionStrategy = useCallback(\n        (args) => {\n            // Start by finding any intersecting droppable\n            const pointerIntersections = pointerWithin(args);\n            const intersections =\n                pointerIntersections.length > 0\n                    ? // If there are droppables intersecting with the pointer, return those\n                      pointerIntersections\n                    : rectIntersection(args);\n            const filteredIntersections = intersections.filter(\n                (i) => !i.data.droppableContainer.data.current.isParentContainer\n            );\n            let overId = getFirstCollision(filteredIntersections, \"id\");\n\n            if (overId != null) {\n                if (overId in items) {\n                    const containerItems = items[overId];\n\n                    // If a container is matched and it contains items (columns 'A', 'B', 'C')\n                    if (containerItems.length > 0) {\n                        // Return the closest droppable within that container\n                        const closestDroppables = closestCenter({\n                            ...args,\n                            droppableContainers: args.droppableContainers.filter(\n                                (container) =>\n                                    container.id !== overId &&\n                                    containerItems.includes(container.id)\n                            ),\n                        });\n                        overId =\n                            closestDroppables.length > 0\n                                ? closestDroppables[0].id\n                                : null;\n                    }\n                }\n\n                lastOverId.current = overId;\n\n                return [{ id: overId }];\n            }\n\n            // When a draggable item moves to a new container, the layout may shift\n            // and the `overId` may become `null`. We manually set the cached `lastOverId`\n            // to the id of the draggable item that was moved to the new container, otherwise\n            // the previous `overId` will be returned which can cause items to incorrectly shift positions\n            if (recentlyMovedToNewContainer.current) {\n                lastOverId.current = activeId;\n            }\n\n            // If no droppable is matched, return the last match\n            return lastOverId.current ? [{ id: lastOverId.current }] : [];\n        },\n        [activeId, items]\n    );\n\n    const getComponentForPreview = () => {\n        if (activeId !== null) {\n            let col = items\n                .flatMap((row) => row.columns)\n                .find((col) => col.id === activeId);\n\n            if (col) {\n                return constructComponent(Components[col.component]);\n            } else if (activeId.includes(\"-menu-item\")) {\n                let componentType = activeId.replace(\"-menu-item\", \"\");\n                return constructComponent(Components[componentType]);\n            }\n        }\n\n        return null;\n    };\n\n    return (\n        <div\n            className=\"builder\"\n            style={{ cursor: draggingElement ? \"grabbing\" : \"\" }}\n        >\n            <BuilderNavbar />\n            <div className=\"lessons\">lessons</div>\n            <DndContext\n                sensors={sensors}\n                modifiers={[snapDragHandleToCursor]}\n                collisionDetection={collisionDetectionStrategy}\n                onDragStart={handleDragStart}\n                onDragOver={handleDragOver}\n                onDragEnd={handleDragEnd}\n            >\n                <div className=\"lesson-content\">\n                    <DebugValues\n                        translateTiming={translateTiming}\n                        setTranslateTiming={setTranslateTiming}\n                        columnDelayTiming={columnDelayTiming}\n                        setColumnDelayTiming={setColumnDelayTiming}\n                        slopTiming={slopTiming}\n                        setSlopTiming={setSlopTiming}\n                        gridGap={gridGap}\n                        setGridGap={setGridGap}\n                    />\n                    <div className=\"grid-wrapper\">\n                        <div className=\"grid\">\n                            <Droppable\n                                id={`row-placeholder-start`}\n                                rowIndex={0}\n                                relativePosition=\"above\"\n                                isPlaceholder={true}\n                                activeId={activeId}\n                                items={items}\n                            >\n                                <div\n                                    style={{\n                                        height: \"24px\",\n                                        width: \"100%\",\n                                    }}\n                                ></div>\n                            </Droppable>\n                            {items.map((row, rowIndex) => (\n                                <div key={row.id}>\n                                    <Droppable\n                                        id={row.id}\n                                        isPlaceholder={false}\n                                        activeId={activeId}\n                                        isParentContainer={true}\n                                        items={items}\n                                    >\n                                        <SortableContext\n                                            items={row.columns.map(\n                                                (col) => col.id\n                                            )}\n                                            strategy={\n                                                horizontalListSortingStrategy\n                                            }\n                                        >\n                                            {items[rowIndex].columns.map(\n                                                (column, colIndex) => {\n                                                    return (\n                                                        <SortableGridColumn\n                                                            id={column.id}\n                                                            key={column.id}\n                                                            index={colIndex}\n                                                            rowIndex={rowIndex}\n                                                            column={column}\n                                                            relativePosition=\"within\"\n                                                        />\n                                                    );\n                                                }\n                                            )}\n                                        </SortableContext>\n                                    </Droppable>\n                                    <Droppable\n                                        id={`row-placeholder-${rowIndex}`}\n                                        rowIndex={rowIndex}\n                                        relativePosition=\"below\"\n                                        isPlaceholder={true}\n                                        activeId={activeId}\n                                        items={items}\n                                    >\n                                        <div\n                                            style={{\n                                                height: \"24px\",\n                                                width: \"100%\",\n                                            }}\n                                        ></div>\n                                    </Droppable>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"sidebar\" style={{ overflow: \"auto\" }}>\n                    <BuilderElementsMenu />\n                </div>\n                <DragOverlay dropAnimation={null}>\n                    <div className=\"drag-handle-visible\">\n                        <div className=\"dragging drag-overlay\">\n                            {getComponentForPreview()}\n                        </div>\n                        <div className=\"drag-handle\">\n                            <FontAwesomeIcon icon=\"fa-solid fa-up-down-left-right\" />\n                        </div>\n                    </div>\n                </DragOverlay>\n            </DndContext>\n        </div>\n    );\n};\n\nexport default PageBuilder;\n","import React from \"react\";\nimport Builder from \"./components/Builder\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    faImage,\n    faHeading,\n    faParagraph,\n    faTriangleExclamation,\n    faUpDownLeftRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n    faImage,\n    faHeading,\n    faParagraph,\n    faTriangleExclamation,\n    faUpDownLeftRight\n);\n\nfunction App() {\n    return <Builder />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}