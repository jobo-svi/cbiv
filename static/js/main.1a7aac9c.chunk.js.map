{"version":3,"sources":["data.js","hooks/useMousePosition.js","components/Image.js","components/Header.js","components/Paragraph.js","components/UndefinedElement.js","components/ComponentFactory.js","components/Droppable.js","components/Draggable.js","components/DefaultDroppable.js","components/Grid.js","components/BuilderElementsMenu.js","components/ItemEditor.js","components/BuilderNavbar.js","components/PlacementPreview.js","components/Builder.js","hooks/useTimeout.js","App.js","reportWebVitals.js","index.js"],"names":["data","body","_uid","columns","component","props","text","useMousePosition","mousePosition","useRef","x","y","useEffect","updateMousePosition","ev","current","clientX","clientY","window","addEventListener","removeEventListener","Image","react_default","a","createElement","className","style","justifyContent","horizontalAlignment","alignItems","verticalAlignment","src","alt","Header","Paragraph","UndefinedElement","index_es","icon","element","Components","header","type","paragraph","image","constructComponent","item","React","getProps","key","_i","_Object$entries","Object","entries","length","_ref3","_ref2","slicedToArray","value","isChildComponent","hasOwnProperty","components_UndefinedElement","Droppable","setNodeRef","useDroppable","id","ref","children","Draggable","_useDraggable","useDraggable","attributes","listeners","dragHandleEnabled","_useState","useState","_useState2","showDragHandle","setShowDragHandle","parentStyles","position","border","assign","onClick","onMouseOver","onMouseOut","objectSpread","right","top","transform","background","color","zIndex","height","width","borderRadius","display","fontSize","defaultProps","DefaultDroppable","_useDroppable","isOver","borderStyle","borderColor","Grid","_ref","items","onGridItemClick","dropTargetIndex","placementPreviewRef","relativeHoverPosition","translateTiming","columnTimerActive","getRowStyle","itemIndex","transition","concat","clientHeight","getColumnStyle","rowIndex","columnIndex","noOfColumns","flex","gap","columnWidth","document","getElementById","getBoundingClientRect","components_DefaultDroppable","map","row","components_Droppable","components_Draggable","BuilderElementsMenu","ItemEditor","JSON","parse","stringify","setItem","flexDirection","onChange","e","temp","target","onSaveChanges","BuilderNavbar","PlacementPreview","forwardRef","PageBuilder","setItems","_useState3","_useState4","draggingElement","setDraggingElement","_useState5","_useState6","closestElement","setClosestElement","_useState7","_useState8","collisions","setCollisions","_useState9","_useState10","placementPreviewStyle","setPlacementPreviewStyle","_useState11","_useState12","itemToEdit","setItemToEdit","_useState13","_useState14","setRelativeHoverPosition","_useState15","_useState16","setDropTargetIndex","mouseSensor","useSensor","MouseSensor","activationConstraint","distance","touchSensor","TouchSensor","tolerance","sensors","useSensors","_useState17","localStorage","getItem","_useState18","setTranslateTiming","_useState19","_useState20","columnDelayTiming","setColumnDelayTiming","_useState21","_useState22","setColumnTimerActive","callback","delay","timeoutRef","savedCallback","setTimeout","clearTimeout","useTimeout","additional","rect","left","c","find","droppableContainer","columnCount","i","columnXOffset","addElement","index","elementType","within","newItems","toConsumableArray","push","uuid","newOb","splice","flatMap","core_esm","onDragStart","event","active","over","onDragEnd","dropIndex","indexOf","column","col","filter","moveElement","onDragMove","clientOffset","hoverRect","elementHeight","borderTop","borderBottom","bottom","topRange","bottomRange","hoveringWithinElement","insideTop","insideBottom","insideCenter","aboveElement","belowElement","dropTarget","hoverPosition","onDragOver","collisionDetection","closestCenter","modifiers","snapCenterToCursor","cursor","components_BuilderNavbar","marginBottom","components_Grid","console","log","components_ItemEditor","updatedItem","components_BuilderElementsMenu","dropAnimation","opacity","components_PlacementPreview","getComponentForPreview","library","add","faImage","faHeading","faParagraph","faTriangleExclamation","faUpDownLeftRight","App","Builder","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1a7aac9c.chunk.js","sourcesContent":["import uuid from \"react-uuid\";\n\nexport const data = {\n    content: {\n        body: [\n            // {\n            //     _uid: uuid(),\n            //     component: \"paragraph\",\n            //     props: {\n            //         text:\n            //             \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris mattis felis sed suscipit consequat. Nullam feugiat quam sit amet est tincidunt, nec malesuada augue posuere. Curabitur posuere libero eu nunc rhoncus, sit amet ullamcorper magna mattis. Nullam et mauris in risus malesuada fringilla ut et lacus. Phasellus congue at velit ac cursus. Integer pretium magna vitae ex vehicula lobortis. Morbi tincidunt purus a lorem pharetra molestie. Morbi ac volutpat diam. In sollicitudin luctus dictum. In sollicitudin nisl sapien, ut dignissim nibh consectetur vitae.\",\n            //     },\n            // },\n            {\n                _uid: \"Row 1\",\n                columns: [\n                    {\n                        _uid: \"Item 1\",\n                        component: \"header\",\n                        props: {\n                            text: \"Item 1\",\n                        },\n                    },\n                    {\n                        _uid: \"Item 2\",\n                        component: \"header\",\n                        props: {\n                            text: \"Item 2\",\n                        },\n                    },\n                ],\n            },\n            {\n                _uid: \"Row 2\",\n                columns: [\n                    {\n                        _uid: \"Item 3\",\n                        component: \"header\",\n                        props: {\n                            text: \"Item 3\",\n                        },\n                    },\n                    {\n                        _uid: \"Item 4\",\n                        component: \"header\",\n                        props: {\n                            text: \"Item 4\",\n                        },\n                    },\n                ],\n            },\n            // {\n            //     _uid: uuid(),\n            //     columns: [\n            //         {\n            //             _uid: uuid(),\n            //             component: \"header\",\n            //             props: {\n            //                 text: \"Item 3\",\n            //             },\n            //         },\n            //         {\n            //             _uid: uuid(),\n            //             component: \"header\",\n            //             props: {\n            //                 text: \"Item 4\",\n            //             },\n            //         },\n            //     ],\n            // },\n            //   {\n            //     _uid: uuid(),\n            //     component: \"image\",\n            //     props: {\n            //       src: `https://source.unsplash.com/random/150x150?t=${uuid()}`,\n            //       alt: \"more text\",\n            //     },\n            //   },\n        ],\n    },\n};\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nconst useMousePosition = () => {\r\n    const mousePosition = useRef({\r\n        x: null,\r\n        y: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const updateMousePosition = (ev) => {\r\n            mousePosition.current = { x: ev.clientX, y: ev.clientY };\r\n        };\r\n        window.addEventListener(\"pointermove\", updateMousePosition);\r\n        return () => {\r\n            window.removeEventListener(\"pointermove\", updateMousePosition);\r\n        };\r\n    }, []);\r\n    return mousePosition;\r\n};\r\n\r\nexport default useMousePosition;\r\n","import React from \"react\";\n\nconst Image = (props) => {\n  return (\n    <div\n      className=\"image-component\"\n      style={{\n        justifyContent: props.horizontalAlignment,\n        alignItems: props.verticalAlignment,\n      }}\n    >\n      <img src={props.src} alt={props.alt} />\n    </div>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\n\nconst Header = (props) => {\n  return <h1>{props.text}</h1>;\n};\n\nexport default Header;\n","import React from \"react\";\r\n\r\nconst Paragraph = (props) => {\r\n    return <p>{props.text}</p>;\r\n};\r\n\r\nexport default Paragraph;\r\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst UndefinedElement = (props) => {\n  return (\n    <div className=\"undefined-element\">\n      <FontAwesomeIcon icon=\"fa-solid fa-triangle-exclamation\" />\n      <span className=\"message\">\n        The element '{props.element}' could not be found\n      </span>\n      <FontAwesomeIcon icon=\"fa-solid fa-triangle-exclamation\" />\n    </div>\n  );\n};\n\nexport default UndefinedElement;\n","import React from \"react\";\nimport FlipCard from \"./FlipCard\";\nimport Image from \"./Image\";\nimport Header from \"./Header\";\nimport Paragraph from \"./Paragraph\";\nimport UndefinedElement from \"./UndefinedElement\";\n\nexport const Components = {\n    header: {\n        type: Header,\n        component: \"header\",\n        props: {\n            text: \"My Header\",\n        },\n    },\n    paragraph: {\n        type: Paragraph,\n        component: \"paragraph\",\n        props: {\n            text:\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris mattis felis sed suscipit consequat. Nullam feugiat quam sit amet est tincidunt, nec malesuada augue posuere. Curabitur posuere libero eu nunc rhoncus, sit amet ullamcorper magna mattis. Nullam et mauris in risus malesuada fringilla ut et lacus. Phasellus congue at velit ac cursus. Integer pretium magna vitae ex vehicula lobortis. Morbi tincidunt purus a lorem pharetra molestie. Morbi ac volutpat diam. In sollicitudin luctus dictum. In sollicitudin nisl sapien, ut dignissim nibh consectetur vitae.\",\n        },\n    },\n    image: {\n        type: Image,\n        component: \"image\",\n        props: {\n            src: `img/image-2.jpg`,\n            alt: \"Alt Text\",\n        },\n    },\n    // flipcard: {\n    //     type: FlipCard,\n    //     validChildComponents: [Image],\n    // },\n    // columnlayout: {\n    //     type: ColumnLayout,\n    // },\n};\n\n// TODO: need a map of what components can be children of what other components,\n// and throw an error or ignore if invalid, ie: flipcard's child can't be another flipcard.\n\n// Get the props for a component. Recursively handle nested sub-components\nconst getProps = (item) => {\n    const props = {\n        key: item._uid,\n    };\n\n    if (!item.props) {\n        return props;\n    }\n    for (const [key, value] of Object.entries(item.props)) {\n        const isChildComponent =\n            value !== null &&\n            typeof value === \"object\" &&\n            value.hasOwnProperty(\"component\");\n\n        if (isChildComponent) {\n            props[key] = React.createElement(\n                Components[value.component].type,\n                getProps(value)\n            );\n        } else {\n            props[key] = value;\n        }\n    }\n\n    return props;\n};\n\nexport const constructComponent = (item) => {\n    if (\n        Components[item.component] &&\n        typeof Components[item.component].type !== \"undefined\"\n    ) {\n        return React.createElement(\n            Components[item.component].type,\n            getProps(item)\n        );\n    }\n\n    return React.createElement(\n        () => <UndefinedElement element={item.component} />,\n        { key: item._uid }\n    );\n};\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n}\n","import React from 'react';\r\nimport {useDroppable} from '@dnd-kit/core';\r\n\r\nconst Droppable = (props) => {\r\n    const { setNodeRef } = useDroppable({\r\n        id: props.id\r\n    });\r\n\r\n    return <div ref={setNodeRef}>{props.children}</div>;\r\n};\r\n\r\nexport default Droppable;","import React, { useEffect, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDraggable } from \"@dnd-kit/core\";\n\nconst Draggable = (props) => {\n    const { attributes, listeners, setNodeRef } = useDraggable({\n        id: props.id,\n        data: props.data,\n    });\n    const dragHandleEnabled = props.dragHandleEnabled;\n    const [showDragHandle, setShowDragHandle] = useState(false);\n\n    const parentStyles = {};\n    if (dragHandleEnabled && showDragHandle) {\n        parentStyles.position = \"relative\";\n        parentStyles.border = `1px solid #343536`;\n    }\n    return (\n        <div\n            ref={setNodeRef}\n            onClick={props.onClick}\n            onMouseOver={() => setShowDragHandle(true)}\n            onMouseOut={() => setShowDragHandle(false)}\n            id={props.id}\n            className={props.className}\n            style={{ ...props.style, ...parentStyles }}\n            {...listeners}\n            {...attributes}\n        >\n            {props.children}\n            {dragHandleEnabled && showDragHandle && (\n                <div\n                    style={{\n                        position: \"absolute\",\n                        right: \"0px\",\n                        top: \"50%\",\n                        transform: \"translate(50%, -50%)\",\n                        background: \"#343536\",\n                        color: \"#D7D7D7\",\n                        zIndex: \"1\",\n                        height: 25,\n                        width: 25,\n                        borderRadius: \"50%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        fontSize: \"18px\",\n                    }}\n                >\n                    <FontAwesomeIcon icon=\"fa-solid fa-up-down-left-right\" />\n                </div>\n            )}\n        </div>\n    );\n};\n\nDraggable.defaultProps = {\n    dragHandleEnabled: false,\n};\n\nexport default Draggable;\n","import React from \"react\";\r\nimport { useDroppable } from \"@dnd-kit/core\";\r\n\r\nconst DefaultDroppable = (props) => {\r\n    const { isOver, setNodeRef } = useDroppable({\r\n        id: \"initial-droppable\",\r\n    });\r\n    return (\r\n        <div\r\n            id=\"initial-droppable\"\r\n            ref={setNodeRef}\r\n            style={{\r\n                height: \"100px\",\r\n                background: isOver ? \"#cae4ff\" : \"#FFF\",\r\n                borderStyle: \"dashed\",\r\n                borderColor: \"#A2A2A2\",\r\n            }}\r\n        ></div>\r\n    );\r\n};\r\n\r\nexport default DefaultDroppable;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Components, constructComponent } from \"./ComponentFactory\";\nimport uuid from \"react-uuid\";\nimport Droppable from \"./Droppable\";\nimport Draggable from \"./Draggable\";\nimport DefaultDroppable from \"./DefaultDroppable\";\n\nconst Grid = ({\n    items,\n    onGridItemClick,\n    dropTargetIndex,\n    placementPreviewRef,\n    relativeHoverPosition,\n    translateTiming,\n    columnTimerActive,\n}) => {\n    function getRowStyle(itemIndex) {\n        let style = {};\n\n        const isWithinElement =\n            relativeHoverPosition === \"center\" && itemIndex === dropTargetIndex;\n\n        // Hovering within the element and we've waited long enough to combine columns\n        if (isWithinElement && !columnTimerActive) {\n            style.border = \"1px solid #343536\";\n            style.justifyContent = \"unset\";\n            style.transition = `transform ${translateTiming}ms ease 0s`;\n        } else {\n            if (\n                dropTargetIndex !== null &&\n                itemIndex >= dropTargetIndex &&\n                placementPreviewRef.current &&\n                relativeHoverPosition !== \"center\"\n            ) {\n                style.transition = `transform ${translateTiming}ms ease 0s`;\n                style.transform = `translate3d(0px, ${placementPreviewRef\n                    .current.clientHeight + 16}px, 0px)`;\n            } else {\n                style.transition = `transform ${translateTiming}ms ease 0s`;\n                style.transform = `translate3d(0px, 0px, 0px)`;\n            }\n        }\n\n        return style;\n    }\n\n    function getColumnStyle(rowIndex, columnIndex, noOfColumns) {\n        let style = {};\n        const isWithinElement =\n            relativeHoverPosition === \"center\" && rowIndex === dropTargetIndex;\n\n        if (isWithinElement && !columnTimerActive) {\n            style.flex = \"unset\";\n            const gap = 16 * noOfColumns;\n            // There's definitely a better way to get row width, but this will do for now.\n            const rowWidth = document\n                .getElementById(items[rowIndex]._uid)\n                .getBoundingClientRect().width;\n            const columnWidth = (rowWidth - gap) / (noOfColumns + 1);\n            style.width = `${columnWidth}px`;\n\n            if (columnIndex != 0) {\n                //style.transition = `transform ${translateTiming}ms ease 0s`;\n                // At 1280 width\n                // 2 -> 3 = 216.5\n                // 3 -> 4 = 108.5\n                //style.transform = `translateX(-${108.5 * columnIndex}px)`;\n            }\n        }\n        return style;\n    }\n\n    return (\n        <div className=\"grid-wrapper\">\n            <div className=\"grid\">\n                {items.length === 0 && <DefaultDroppable />}\n                {items.length > 0 &&\n                    items.map((row, rowIndex) => {\n                        return (\n                            <Droppable id={row._uid} key={row._uid}>\n                                <div\n                                    className=\"grid-row\"\n                                    style={getRowStyle(rowIndex)}\n                                    id={row._uid}\n                                >\n                                    {row.columns.map((item, columnIndex) => {\n                                        return (\n                                            <Draggable\n                                                id={item._uid}\n                                                key={item._uid}\n                                                className={`grid-column`}\n                                                dragHandleEnabled={true}\n                                                onClick={() =>\n                                                    onGridItemClick(item)\n                                                }\n                                                style={getColumnStyle(\n                                                    rowIndex,\n                                                    columnIndex,\n                                                    row.columns.length\n                                                )}\n                                            >\n                                                {constructComponent(item)}\n                                            </Draggable>\n                                        );\n                                    })}\n                                </div>\n                            </Droppable>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n};\n\nexport default Grid;\n","import React from \"react\";\nimport Draggable from \"./Draggable\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ComponentsList } from \"./ComponentFactory\";\nimport uuid from \"react-uuid\";\nimport { useDraggable, DragOverEvent, DragOverlay } from \"@dnd-kit/core\";\nimport \"../css/App.css\";\nimport SortableItem from \"../SortableItem\";\n\nconst BuilderElementsMenu = (props) => {\n    return (\n        <div className=\"builder-elements-menu\">\n            <div className=\"element-wrapper\">\n                <Draggable\n                    id=\"header-menu-item\"\n                    data={{\n                        type: \"header\",\n                    }}\n                >\n                    <button className=\"element\">\n                        <FontAwesomeIcon icon=\"fa-solid fa-heading\" /> HEADER\n                    </button>\n                </Draggable>\n            </div>\n            <div className=\"element-wrapper\">\n                <Draggable\n                    id=\"paragraph-menu-item\"\n                    data={{\n                        type: \"paragraph\",\n                    }}\n                >\n                    <button className=\"element\">\n                        <FontAwesomeIcon icon=\"fa-solid fa-paragraph\" />\n                        PARAGRAPH\n                    </button>\n                </Draggable>\n            </div>\n            <div className=\"element-wrapper\">\n                <Draggable\n                    id=\"image-menu-item\"\n                    data={{\n                        type: \"image\",\n                    }}\n                >\n                    <button className=\"element\">\n                        <FontAwesomeIcon icon=\"fa-solid fa-image\" />\n                        IMAGE\n                    </button>\n                </Draggable>\n            </div>\n            {/* <div className=\"element-wrapper\">\n                <Draggable\n                    type=\"image-menu-item\"\n                    data={{\n                        type: \"image\",\n                    }}\n                >\n                    <button className=\"element\">\n                        <FontAwesomeIcon icon=\"image\" /> IMAGE\n                    </button>\n                </Draggable>\n            </div> */}\n        </div>\n    );\n};\n\nexport default BuilderElementsMenu;\n","import React, { useState, useEffect } from \"react\";\nimport { Components, constructComponent } from \"./ComponentFactory\";\n\nconst ItemEditor = (props) => {\n  // Create a deep copy of the item to be edited,\n  const [item, setItem] = useState(JSON.parse(JSON.stringify(props.item)));\n\n  const handleTextChange = (e) => {\n    let temp = { ...item };\n    temp.props.text = e.target.value;\n    setItem(temp);\n  };\n\n  return (\n    <div\n      className=\"item-editor\"\n      style={{ display: \"flex\", flexDirection: \"column\" }}\n    >\n      {constructComponent(props.item)}\n      <input type=\"text\" onChange={handleTextChange} value={item.props.text} />\n      <button onClick={() => props.onSaveChanges(item)}>SAVE</button>\n    </div>\n  );\n};\n\nexport default ItemEditor;","import \"../css/App.css\";\r\nimport React from \"react\";\r\n\r\nconst BuilderNavbar = () => {\r\n  return (\r\n      <div className=\"navbar\">\r\n        <div className=\"course\">\r\n            <span className=\"course-image\"></span>\r\n            <span className=\"course-title\">Course Title (edit)</span>\r\n        </div>\r\n        <div className=\"options\">\r\n            <span className=\"option\">Cancel</span>\r\n            <span className=\"option\">Save</span>\r\n            <span className=\"option\">Publish</span>\r\n            <span className=\"option preview\">Preview</span>\r\n            <span className=\"option\">Gear icon</span>\r\n            <span className=\"option\">Chart icon</span>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default BuilderNavbar;","import React, { forwardRef } from \"react\";\r\n\r\nconst PlacementPreview = forwardRef((props, ref) => {\r\n    return (\r\n        <div id=\"placement-preview\" style={props.style} ref={ref}>\r\n            <div className=\"overlay\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PlacementPreview;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n    DndContext,\n    closestCenter,\n    pointerWithin,\n    DragOverlay,\n    MouseSensor,\n    TouchSensor,\n    useSensor,\n    useSensors,\n} from \"@dnd-kit/core\";\nimport { snapCenterToCursor } from \"@dnd-kit/modifiers\";\nimport uuid from \"react-uuid\";\nimport \"../css/App.css\";\nimport { data } from \"../data\";\nimport useMousePosition from \"../hooks/useMousePosition\";\nimport Grid from \"./Grid\";\nimport BuilderElementsMenu from \"./BuilderElementsMenu\";\nimport ItemEditor from \"./ItemEditor\";\nimport BuilderNavbar from \"./BuilderNavbar\";\nimport PlacementPreview from \"./PlacementPreview\";\nimport { Components, constructComponent } from \"./ComponentFactory\";\nimport useTimeout from \"../hooks/useTimeout\";\n\nconst PageBuilder = () => {\n    // The lesson elements\n    const [items, setItems] = useState(data.content.body);\n\n    // What element we're currently dragging, needed so we can measure it and show a placeholder in the dom\n    const [draggingElement, setDraggingElement] = useState(null);\n\n    // Closest element to your cursor when dragging, as determined by dnd-kit\n    const [closestElement, setClosestElement] = useState(null);\n\n    // Elements your drag element is intersecting with while dragging\n    const [collisions, setCollisions] = useState(null);\n\n    // Track the position of the mouse for positioning the drag preview\n    const mousePosition = useMousePosition();\n\n    // Keep a reference to the placement preview, for measuring its height\n    const placementPreviewRef = useRef(null);\n\n    const [placementPreviewStyle, setPlacementPreviewStyle] = useState({\n        display: \"none\",\n    });\n\n    const [itemToEdit, setItemToEdit] = useState(null);\n\n    // Position of the dragged element relative to the element being hovered over (above, below, center)\n    const [relativeHoverPosition, setRelativeHoverPosition] = useState(null);\n\n    // Where a new element will be inserted into the item array\n    const [dropTargetIndex, setDropTargetIndex] = useState(null);\n\n    // dndkit sensors\n    const mouseSensor = useSensor(MouseSensor, {\n        // Require the mouse to move by 1 pixel before activating, so we can differentiate between drag and click\n        activationConstraint: {\n            distance: 1,\n        },\n    });\n\n    const touchSensor = useSensor(TouchSensor, {\n        // Press, with tolerance of 5px of movement\n        activationConstraint: {\n            tolerance: 5,\n        },\n    });\n\n    const sensors = useSensors(mouseSensor, touchSensor);\n\n    // Configurables\n    const [translateTiming, setTranslateTiming] = useState(\n        +localStorage.getItem(\"translateTiming\") || 300\n    );\n\n    const [columnDelayTiming, setColumnDelayTiming] = useState(\n        +localStorage.getItem(\"columnDelayTiming\") || 1000\n    );\n\n    useEffect(() => {\n        localStorage.setItem(\"translateTiming\", translateTiming);\n        localStorage.setItem(\"columnDelayTiming\", columnDelayTiming);\n    }, [translateTiming, columnDelayTiming]);\n\n    // Timeout for column hovering\n    const [columnTimerActive, setColumnTimerActive] = useState(false);\n\n    useTimeout(\n        () => {\n            setDropTargetIndex(dropTargetIndex);\n            setRelativeHoverPosition(\"center\");\n            setColumnTimerActive(false);\n        },\n        !columnTimerActive ? null : columnDelayTiming\n    );\n\n    // Position the placement preview\n    useEffect(() => {\n        if (!closestElement || !items.length) {\n            return;\n        }\n\n        if (columnTimerActive) {\n            setPlacementPreviewStyle({\n                display: \"none\",\n            });\n        }\n\n        if (relativeHoverPosition === \"center\" && !columnTimerActive) {\n            const columnCount = items.find((i) => i._uid === closestElement.id)\n                .columns.length;\n            const columnWidth = closestElement.rect.width / (columnCount + 1);\n            const columnXOffset =\n                closestElement.rect.left + columnWidth * columnCount;\n            setPlacementPreviewStyle({\n                top: 0,\n                left: columnXOffset,\n                width: closestElement.rect.width / (columnCount + 1),\n                transition: `transform ${translateTiming}ms ease 0s`,\n                transform: `translate3d(0px, ${closestElement.rect.top}px, 0px)`,\n            });\n        } else if (!columnTimerActive) {\n            // get the dimensions of the element that matches the droptarget\n            let item = items[dropTargetIndex];\n            if (dropTargetIndex === items.length) {\n                item = items[items.length - 1];\n            }\n\n            let additional = 0;\n            if (dropTargetIndex === items.length) {\n                additional += closestElement.rect.height + 16;\n            }\n\n            // Render the placement preview\n            setPlacementPreviewStyle({\n                width: closestElement.rect.width,\n                left: closestElement.rect.left,\n                transition: `transform ${translateTiming}ms ease 0s`,\n                transform: `translate3d(0px, ${closestElement.rect.top +\n                    additional}px, 0px)`,\n            });\n\n            if (collisions) {\n                let c = collisions.find((c) => c.id === item._uid);\n\n                if (c) {\n                    c = c.data.droppableContainer.rect.current;\n\n                    let additional = 0;\n                    if (dropTargetIndex === items.length) {\n                        additional += c.height + 16;\n                    }\n\n                    // Render the placement preview\n                    setPlacementPreviewStyle({\n                        width: c.width,\n                        left: c.left,\n                        transition: `transform ${translateTiming}ms ease 0s`,\n                        transform: `translate3d(0px, ${c.top +\n                            additional}px, 0px)`,\n                    });\n                }\n            }\n        }\n    }, [\n        relativeHoverPosition,\n        closestElement,\n        dropTargetIndex,\n        collisions,\n        columnTimerActive,\n    ]);\n\n    const handleGridItemClick = (item) => {\n        //setItemToEdit(item);\n        console.log(\"clicked grid item\", item);\n    };\n\n    const handleSaveChanges = (updatedItem) => {\n        setItems(\n            items.map((item) =>\n                item._uid === updatedItem._uid ? updatedItem : item\n            )\n        );\n        setItemToEdit(null);\n    };\n\n    function handleDragStart(event) {\n        const { active, over, collisions } = event;\n        setDraggingElement(active);\n        setClosestElement(over);\n        setCollisions(collisions);\n    }\n\n    function handleDragOver(event) {\n        const { active, over, collisions } = event;\n        //console.log(\"over\");\n    }\n\n    function handleDragEnd(event) {\n        const { active, over } = event;\n        if (over) {\n            if (items.length === 0) {\n                setItems(addElement(0, active.data.current.type, false));\n            } else {\n                let dropIndex = items.map((i) => i._uid).indexOf(over.id);\n                if (dropIndex !== -1) {\n                    // If hovering below the object, drop target index will be 1 more than current index\n                    if (relativeHoverPosition === \"bottom\") {\n                        dropIndex += 1;\n                    }\n\n                    const item = getElementById(draggingElement.id);\n                    if (!item) {\n                        setItems(\n                            addElement(\n                                dropIndex,\n                                active.data.current.type,\n                                relativeHoverPosition === \"center\" &&\n                                    !columnTimerActive\n                            )\n                        );\n                    } else {\n                        setItems(\n                            moveElement(\n                                item,\n                                dropIndex,\n                                relativeHoverPosition === \"center\"\n                            )\n                        );\n                    }\n                }\n            }\n        }\n\n        setDraggingElement(null);\n        setClosestElement(null);\n        setCollisions(null);\n        setDropTargetIndex(null);\n        setRelativeHoverPosition(null);\n        setPlacementPreviewStyle({\n            display: \"none\",\n        });\n    }\n\n    function handleDragMove(event) {\n        const { active, over, collisions } = event;\n\n        const clientOffset = mousePosition.current;\n\n        if (over) {\n            setClosestElement(over);\n            setCollisions(collisions);\n\n            // The coordinates of the element we're hovering over\n            const hoverRect = over.rect;\n\n            // Determine mouse position relative to dndkit's closest match\n            const elementHeight = over.rect.height;\n            const borderTop = hoverRect.top;\n            const borderBottom = hoverRect.bottom;\n            const topRange = borderTop + elementHeight / 5;\n            const bottomRange = borderBottom + elementHeight / 5;\n\n            const hoveringWithinElement =\n                clientOffset.y >= hoverRect.top &&\n                clientOffset.y <= hoverRect.bottom &&\n                clientOffset.x >= hoverRect.left &&\n                clientOffset.x <= hoverRect.right;\n\n            const insideTop =\n                hoveringWithinElement &&\n                clientOffset.y <= topRange &&\n                clientOffset.y >= borderTop;\n\n            const insideBottom =\n                hoveringWithinElement &&\n                clientOffset.y >= bottomRange &&\n                clientOffset.y <= borderBottom;\n\n            const insideCenter =\n                hoveringWithinElement && !insideTop && !insideBottom;\n\n            const aboveElement =\n                !hoveringWithinElement &&\n                clientOffset.y < hoverRect.top + elementHeight / 2;\n\n            const belowElement =\n                !hoveringWithinElement &&\n                clientOffset.y > hoverRect.top + elementHeight / 2;\n\n            // Determine position of element if it were dropped\n            let dropTarget = items.map((i) => i._uid).indexOf(over.id);\n            let hoverPosition = null;\n            if (dropTarget !== -1) {\n                // Where are we hovering near\n                if (aboveElement) {\n                    hoverPosition = \"top\";\n                } else if (belowElement) {\n                    hoverPosition = \"bottom\";\n                    dropTarget += 1;\n                } else if (insideCenter) {\n                    hoverPosition = \"center\";\n                }\n\n                setDropTargetIndex(dropTarget);\n                setRelativeHoverPosition(hoverPosition);\n\n                // Cancel the column timer if we ever hover outside the center of the element\n                if (hoverPosition !== \"center\") {\n                    setColumnTimerActive(false);\n                }\n\n                // Start the column timer if we're hovering within an element and weren't already hovering\n                if (\n                    hoverPosition === \"center\" &&\n                    relativeHoverPosition !== \"center\"\n                ) {\n                    setColumnTimerActive(true);\n                }\n            }\n        }\n    }\n\n    function addElement(index, elementType, within) {\n        const newItems = [...items];\n\n        if (!within) {\n            // Add a whole new row\n            const newOb = {\n                _uid: uuid(),\n                columns: [\n                    {\n                        _uid: uuid(),\n                        component: elementType,\n                        props: { ...Components[elementType].props },\n                    },\n                ],\n            };\n\n            newItems.splice(index, 0, newOb);\n        } else {\n            // Add a column to an existing row\n            let row = newItems[index];\n            if (row) {\n                row.columns.push({\n                    _uid: uuid(),\n                    component: elementType,\n                    props: { ...Components[elementType].props },\n                });\n            }\n        }\n        return newItems;\n    }\n\n    function moveElement(item, rowIndex, within) {\n        let newItems = [...items];\n\n        // Find the row where the item currently lives\n        newItems.map((row) => {\n            let column = row.columns.find((col) => col._uid === item._uid);\n            if (column) {\n                row.columns = row.columns.filter((c) => c._uid != column._uid);\n            }\n        });\n\n        if (!within) {\n            const newOb = {\n                _uid: uuid(),\n                columns: [item],\n            };\n            newItems.splice(rowIndex, 0, newOb);\n        } else {\n            // Add a column to an existing row\n            let row = newItems[rowIndex];\n            if (row) {\n                row.columns.push(item);\n            }\n        }\n\n        newItems = newItems.filter((row) => row.columns.length > 0);\n\n        return newItems;\n    }\n\n    const getComponentForPreview = () => {\n        if (draggingElement) {\n            const item = getElementById(draggingElement.id);\n            if (item) {\n                // if dragged ele exists in items array, it's an existing element being dragged\n                return constructComponent(Components[item.component]);\n            } else {\n                // new element being dragged\n                return constructComponent(\n                    Components[draggingElement.data.current.type]\n                );\n            }\n        }\n    };\n\n    const getElementById = (id) => {\n        return items.flatMap((row) => row.columns).find((c) => c._uid === id);\n    };\n\n    return (\n        <DndContext\n            onDragStart={handleDragStart}\n            onDragEnd={handleDragEnd}\n            onDragMove={handleDragMove}\n            onDragOver={handleDragOver}\n            collisionDetection={closestCenter}\n            modifiers={[snapCenterToCursor]}\n            sensors={sensors}\n        >\n            <div\n                className=\"builder\"\n                style={{ cursor: draggingElement ? \"grabbing\" : \"\" }}\n            >\n                <BuilderNavbar />\n                <div className=\"lessons\" style={{ height: \"0\" }}>\n                    lessons\n                </div>\n                <div className=\"lesson-content\">\n                    <div\n                        style={{\n                            display: \"flex\",\n                            gap: \"20px\",\n                            marginBottom: \"40px\",\n                        }}\n                    >\n                        <label>\n                            <div>Translate speed (ms)</div>\n                            <input\n                                type=\"number\"\n                                value={translateTiming}\n                                onChange={(event) =>\n                                    setTranslateTiming(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            <div>Column hover time (ms)</div>\n                            <input\n                                value={columnDelayTiming}\n                                onChange={(event) =>\n                                    setColumnDelayTiming(event.target.value)\n                                }\n                            />\n                        </label>\n                    </div>\n                    <Grid\n                        items={items}\n                        setItems={setItems}\n                        onGridItemClick={handleGridItemClick}\n                        dropTargetIndex={dropTargetIndex}\n                        placementPreviewRef={placementPreviewRef}\n                        relativeHoverPosition={relativeHoverPosition}\n                        translateTiming={translateTiming}\n                        columnTimerActive={columnTimerActive}\n                    />\n                </div>\n                <div className=\"sidebar\">\n                    {itemToEdit !== null ? (\n                        <ItemEditor\n                            item={itemToEdit}\n                            onSaveChanges={handleSaveChanges}\n                        />\n                    ) : (\n                        <BuilderElementsMenu />\n                    )}\n                </div>\n                <DragOverlay dropAnimation={null}>\n                    <h1 style={{ opacity: \".5\" }}>Drag Preview</h1>\n                </DragOverlay>\n                <PlacementPreview\n                    ref={placementPreviewRef}\n                    style={placementPreviewStyle}\n                >\n                    {getComponentForPreview()}\n                </PlacementPreview>\n            </div>\n        </DndContext>\n    );\n};\n\nexport default PageBuilder;\n","import React from \"react\";\r\nexport default function useTimeout(callback, delay) {\r\n    const timeoutRef = React.useRef(null);\r\n    const savedCallback = React.useRef(callback);\r\n    React.useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n    React.useEffect(() => {\r\n        const tick = () => savedCallback.current();\r\n        if (typeof delay === \"number\") {\r\n            timeoutRef.current = window.setTimeout(tick, delay);\r\n            return () => window.clearTimeout(timeoutRef.current);\r\n        }\r\n    }, [delay]);\r\n    return timeoutRef;\r\n}\r\n","import React from \"react\";\nimport Builder from \"./components/Builder\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    faImage,\n    faHeading,\n    faParagraph,\n    faTriangleExclamation,\n    faUpDownLeftRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n    faImage,\n    faHeading,\n    faParagraph,\n    faTriangleExclamation,\n    faUpDownLeftRight\n);\n\nfunction App() {\n    return <Builder />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}