/* Builder, Builder sections */

.builder {
  display: grid;
  grid-template-rows: auto auto 1fr;
  grid-template-columns: 1fr auto;
  height: 100vh;
}

.builder .navbar {
    grid-column: 1 / 3;
    display: flex;
    justify-content: space-between;
    padding: .7rem;
    background: #D9D9D9;
}

.builder .navbar .course {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.builder .navbar .course .course-image {
    width: 50px;
    height: 30px;
    background: #000;
    margin-right: .5rem;
}

.builder .navbar .options {
    display: flex;
    align-items: center;
}

.builder .navbar .options .option {
    margin-right: .7rem;
}

.builder .navbar .options .option:last-child {
    margin-right: 0;
}

.builder .navbar .options .option.preview {
    background: #000;
    color: #fff;
    padding: .5rem 2rem;
    border-radius: 2rem;
}

.builder .lessons {
    grid-column: 1 / 3;
}

.builder .lesson-content {
  background-color: #ebecf0;
  overflow: auto;
  padding: 1rem 2rem 2rem 2rem;
}

.builder .sidebar {
  min-width: 15rem;
  background: #343536;
  padding: 1rem;
}

.builder .lesson-content .topbar {
  position: sticky;
  display: flex;
  justify-content: flex-end;
  margin-bottom: 1rem;
}

.builder-elements-menu {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.builder-elements-menu .element-wrapper {
  margin-bottom: 0.6rem;
}

.builder-elements-menu .element {
  border: none;
  background: #d7d7d7;
  color: #232323;
  width: 100%;
  height: 2.8rem;
  font-size: 1rem;
}

@media screen and (max-width: 800px) {
  .builder {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr auto;
  }

  .main {
    order: -1;
  }

  .builder-elements-menu {
    display: inline-grid;
    grid-auto-flow: column;
    grid-gap: 1rem;
  }

  .builder-elements-menu .element {
    margin-bottom: 0;
    padding: 0 1rem;
  }
}

.columns {
  -moz-columns: 120px;
  -webkit-columns: 120px;
  columns: 120px;
}
.react-grid-item {
  box-sizing: border-box;
  overflow: hidden;
}
.react-grid-item:not(.react-grid-placeholder) {
  background: #e1e1e1;
  border: 1px solid black;
}
.react-grid-item.resizing {
  opacity: 0.9;
}
.react-grid-item.static {
  background: #cce;
}
.react-grid-item .text {
  font-size: 24px;
  text-align: center;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  height: 24px;
}
.react-grid-item .minMax {
  font-size: 12px;
}
.react-grid-item .add {
  cursor: pointer;
}
.react-grid-dragHandleExample {
  cursor: move; /* fallback if grab cursor is unsupported */
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.toolbox {
  background-color: #dfd;
  width: 100%;
  height: 120px;
  overflow: scroll;
}

.hide-button {
  cursor: pointer;
  position: absolute;
  font-size: 20px;
  top: 0px;
  right: 5px;
}

.toolbox__title {
  font-size: 24px;
  margin-bottom: 5px;
}
.toolbox__items {
  display: block;
}
.toolbox__items__item {
  display: inline-block;
  text-align: center;
  line-height: 40px;
  cursor: pointer;
  width: 40px;
  height: 40px;
  padding: 10px;
  margin: 5px;
  border: 1px solid black;
  background-color: #ddd;
}
.droppable-element {
  width: 150px;
  text-align: center;
  background: #fdd;
  border: 1px solid black;
  margin: 10px 0;
  padding: 10px;
}

.react-grid-layout {
  position: relative;
  transition: height 200ms ease;
  background: #fff;
  /* width: 100%; */
  min-width: 320px;

  /* Might want to revisit later */
  min-height: 100%;
}
.react-grid-item {
  transition: all 200ms ease;
  transition-property: left, top;
}
.react-grid-item img {
  pointer-events: none;
  user-select: none;
}
.react-grid-item.cssTransforms {
  transition-property: transform;
}
.react-grid-item.resizing {
  z-index: 1;
  will-change: width, height;
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  will-change: transform;
}

.react-grid-item.dropping {
  visibility: hidden;
}

.react-grid-item.react-grid-placeholder {
  background: red;
  opacity: 0.2;
  transition-duration: 100ms;
  z-index: 2;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

.react-grid-item > .react-resizable-handle {
  position: absolute;
  width: 20px;
  height: 20px;
}

.react-grid-item > .react-resizable-handle::after {
  content: "";
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 5px;
  height: 5px;
  border-right: 2px solid rgba(0, 0, 0, 0.4);
  border-bottom: 2px solid rgba(0, 0, 0, 0.4);
}

.react-resizable-hide > .react-resizable-handle {
  display: none;
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-sw {
  bottom: 0;
  left: 0;
  cursor: sw-resize;
  transform: rotate(90deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-se {
  bottom: 0;
  right: 0;
  cursor: se-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-nw {
  top: 0;
  left: 0;
  cursor: nw-resize;
  transform: rotate(180deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-ne {
  top: 0;
  right: 0;
  cursor: ne-resize;
  transform: rotate(270deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-w,
.react-grid-item > .react-resizable-handle.react-resizable-handle-e {
  top: 50%;
  margin-top: -10px;
  cursor: ew-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-w {
  left: 0;
  transform: rotate(135deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-e {
  right: 0;
  transform: rotate(315deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-n,
.react-grid-item > .react-resizable-handle.react-resizable-handle-s {
  left: 50%;
  margin-left: -10px;
  cursor: ns-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-n {
  top: 0;
  transform: rotate(225deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-s {
  bottom: 0;
  transform: rotate(45deg);
}

/*
*
* ==========================================
* FLIP CARD WITH TEXT
* ==========================================
*
*/

/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
.flip-card {
  background-color: transparent;
  width: 300px;
  height: 300px;
  perspective: 1000px;
}

/* This container is needed to position the front and back side */
.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}

/* Do a horizontal flip when you move the mouse over the flip box container */
.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

/* Position the front and back side */
.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

/* Style the front side (fallback if image is missing) */
.flip-card-front {
  background-color: #bbb;
  color: black;
}

/* Style the back side */
.flip-card-back {
  background-color: #2980b9;
  color: white;
  transform: rotateY(180deg);
  overflow: auto;
}

.grid-wrapper {
  height: 100%;
  margin: 0 auto;
}

.grid {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 10px;
  margin: 0 auto;
  transform-origin: top;
  padding: 5px;
  background: #fff;
}

@media screen and (min-width: 0px) {
  .grid,
  .grid-wrapper {
    max-width: 480px;
  }
}

@media screen and (min-width: 600px) {
  .grid,
  .grid-wrapper {
    max-width: 960px;
  }
}

@media screen and (min-width: 1024px) {
  .grid,
  .grid-wrapper {
    max-width: 1280px;
  }
}

.column-layout {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-column-gap: 10px;
  grid-row-gap: 10px;
}

.column-layout-item {
  height: 200px;
  border: 1px solid gray;
}

.image-component {
  display: flex;
}

#transform-scale {
  display: flex;
  align-items: center;
  width: 200px;
  border: 1px solid #d1d1d1;
  padding: 5px 10px;
  border-radius: 4px;
  font-size: 15px;
  background: #343536;
  color: white;

  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.undefined-element {
  background: #ffc107;
  color: #343a40;
  font-weight: bold;
  text-align: center;
  padding: 1rem;
  border-style: dashed;
  border-width: 3px;
}

.undefined-element .message {
  margin: 0 0.5rem;
}
